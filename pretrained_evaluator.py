import data_processor
import model_lib
from tqdm import tqdm


def predict(X, vec_size: list, models: list):
    model_nope = models[0]
    model_pe = models[1]
    ret = []

    for i in tqdm(X):
        if len(i) == vec_size[0]:
            ret.append(model_nope.predict([i])[0])
        else:
            ret.append(model_pe.predict([i])[0])

    return ret


def ac_score(predict_y, answer_y):
    cnt = 0
    for i in range(len(answer_y)):
        if predict_y[i] == answer_y[i]:
            cnt += 1
    return cnt / len(answer_y)


if __name__ == "__main__":
    dataset = data_processor.read_prediction_dict("preprocessed/prediction_valid.json")
    model_nope = model_lib.load_pretrained_model("pretrained_model/final_nopestudio.pkl")
    model_pe = model_lib.load_pretrained_model("pretrained_model/final_pestudio.pkl")
    print(dataset["size"])
    res = predict(dataset["X"], dataset["size"], [model_nope, model_pe])

    # print(res)
    print(ac_score(res, dataset['y']))
