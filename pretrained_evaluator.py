import data_processor
import model_lib
from tqdm import tqdm


def predict(X, vec_size: list, models: list):
    model_nope = models[0]
    model_pe = models[1]
    ret = []

    for i in tqdm(X):
        if len(i) == vec_size[0]:
            ret.append(model_nope.predict([i])[0])
        else:
            ret.append(model_pe.predict([i])[0])

    return ret


def ac_score(predict_y, answer_y):
    cnt = 0
    for i in range(len(answer_y)):
        if predict_y[i] == answer_y[i]:
            cnt += 1
    return cnt / len(answer_y)


def export_prediction_result(res: dict):
    import csv
    print("Export start")
    with open("테스트데이터_정답.csv", 'w', encoding='ISO-8859-1') as f:
        w = csv.writer(f)
        w.writerow(["file", "prediction"])
        for k, v in tqdm(res.items()):
            w.writerow([k, v])
    print("Export finished")
    return


if __name__ == "__main__":
    dataset = data_processor.read_prediction_dict("preprocessed/test_set.json")
    model_nope = model_lib.load_pretrained_model("pretrained_model/final_nopestudio.pkl")
    model_pe = model_lib.load_pretrained_model("pretrained_model/final_pestudio.pkl")
    print(dataset["size"])
    res = predict(dataset["X"], dataset["size"], [model_nope, model_pe])
    out = dict()
    for i in range(len(res)):
        out[dataset["X_names"][i].lower()] = res[i]

    # 프로젝트 최종 결과물(테스트셋 예측 결과) 출력
    export_prediction_result(out)
